#!/usr/bin/env bash

. ./path.sh || exit 1;
. ./cmd.sh || exit 1;
. ./db.sh || exit 1;

log() {
    local fname=${BASH_SOURCE[1]##*/}
    echo -e "$(date '+%Y-%m-%dT%H:%M:%S') (${fname}:${BASH_LINENO[0]}:${FUNCNAME[1]}) $*"
}

# General configuration
src_lang=id
tgt_lang=en
train_data_folder=
test_data_folder=
data_tag=
train_data_split=80
valid_data_split=20

# Assumes that data was in the format generated by jtubespeech
train_set=train
valid_set=valid
test_set=test

set -e
set -u
set -o pipefail

. utils/parse_options.sh

echo "${train_data_folder}"

log "stage 0: Generating Kaldi style data directories from jtubespeech data"

if [ ! -z ${data_tag} ]; then 
    python3 local/data_prep.py \
        --src_language ${src_lang} \
        --tgt_language ${tgt_lang} \
        --annotated_data_filepath ${train_data_folder} \
        --data_tag ${data_tag} \
        --train_data_split ${train_data_split} \
        --validation_data_split ${valid_data_split} \
        --test_data_split 0

    python3 local/data_prep.py \
        --src_language ${src_lang} \
        --tgt_language ${tgt_lang} \
        --annotated_data_filepath ${test_data_folder} \
        --data_tag ${data_tag} \
        --train_data_split 0 \
        --validation_data_split 0 \
        --test_data_split 100 \
        --only_test_prep True
else
    python3 local/data_prep.py \
        --src_language ${src_lang} \
        --tgt_language ${tgt_lang} \
        --annotated_data_filepath ${train_data_folder} \
        --train_data_split ${train_data_split} \
        --validation_data_split ${valid_data_split} \
        --test_data_split 0

    python3 local/data_prep.py \
        --src_language ${src_lang} \
        --tgt_language ${tgt_lang} \
        --annotated_data_filepath ${test_data_folder} \
        --train_data_split 0 \
        --validation_data_split 0 \
        --test_data_split 100
        --only_test_prep True
fi

for set in train valid test; do
    utils/spk2utt_to_utt2spk.pl data/${set}_${data_tag}/spk2utt > data/${set}_${data_tag}/utt2spk
    utils/fix_data_dir.sh data/${set}_${data_tag}
done
