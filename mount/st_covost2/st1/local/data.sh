#!/usr/bin/env bash

. ./path.sh || exit 1;
. ./cmd.sh || exit 1;
. ./db.sh || exit 1;

log() {
    local fname=${BASH_SOURCE[1]##*/}
    echo -e "$(date '+%Y-%m-%dT%H:%M:%S') (${fname}:${BASH_LINENO[0]}:${FUNCNAME[1]}) $*"
}

# General configuration
stage=0
stop_stage=100
src_lang=id
tgt_lang=en
src_data_folder="/datasets/id_en"
dst_data_folder=
train_data_split=80
valid_data_split=10
test_data_split=10

# Assumes that data was in the format generated by jtubespeech
train_set=train
valid_set=valid
test_set=test

. utils/parse_options.sh || exit 1;

# Set bash to 'debug' mode, it will exit on :
# -e 'error', -u 'undefined variable', -o ... 'error in pipeline', -x 'print commands',
set -e
set -u
set -o pipefail

if [ ${stage} -le 0 ] && [ ${stop_stage} -ge 0 ]; then
    log "stage 0: Generating Kaldi style data directories from jtubespeech data"

    python3 local/data_prep.py \
        --src_language ${src_lang} \
        --tgt_language ${tgt_lang} \
        --annotated_data_filepath ${src_data_folder} \
        --dest_annotated_data_filepath ${dst_data_folder} \
        --train_data_split ${train_data_split} \
        --validation_data_split ${valid_data_split} \
        --test_data_split ${test_data_split}

    for set in train valid test; do
        utils/spk2utt_to_utt2spk.pl data/${set}/spk2utt > data/${set}/utt2spk
        utils/fix_data_dir.sh data/${set}
    done
fi

if [ ${stage} -le 1 ] && [ ${stop_stage} -ge 1 ]; then
    log "stage 1: Renaming directories"
    for set in train valid test; do
        mv data/${set} data/${set}.${src_lang}-${tgt_lang}
    done
fi

if [ ${stage} -le 2 ] && [ ${stop_stage} -ge 2 ]; then
    log "stage 2: Text Preprocessing with Moses (tokenization, case, punctuation marks etc.)"
    local/data_prep_moses.sh ${src_lang} ${tgt_lang}
fi
